/*
	
	breakpoints.fab 1.4
	
*/


/* --- VARS --- */

// Breakpoints
$breakpoints: 1024, 768, 640;

// Display
$displays: inline-block, flex;

/* --- CLASSES --- */

[class*='bp-'] {
	display: none !important;	
}

// Breakpoints
@each $breakpoint in $breakpoints {
  
  $bp: nth($breakpoint, 1);
  
  @for $i from 0 through 1 {
  	
  	$bpmax: ($bp - $i);
  	$bpmin: ($bp + $i);
  	
	  @media all and (max-width: #{$bpmax}px) {
	    
	    .bp-max-#{$bpmax} {
	      display: block !important;
	      @each $display in $displays {
		      $dspl: nth($display, 1);
		      &.bp-#{$dspl} {
			      display: $dspl !important;
		      }
		    }
	    }
	
	  }
	  
	  @media all and (min-width: #{$bpmin}px) {
	    
	    .bp-min-#{$bpmin} {
	      display: block !important;
	      @each $display in $displays {
		      $dspl: nth($display, 1);
		      &.bp-#{$dspl} {
			      display: $dspl !important;
		      }
		    }
	    }
	
	  }
	  
	}
	
}

// Breakpoints max/min
@each $breakpoint in $breakpoints {
  
  @for $i from 0 through 1 {
  	
  	$bp: nth($breakpoint, 1);
  	$bpmax: ($bp - $i);
  
	  @each $breakpoint in $breakpoints {
	  	
	  	@for $i from 0 through 1 {
  	
		  	$bp: nth($breakpoint, 1);
		  	$bpmin: ($bp + $i);
	  	
		  	@if $bpmax > $bpmin {
			  	
			  	@media all and (max-width: #{$bpmax}px) and (min-width: #{$bpmin}px) {
			    
				    .bp-max#{$bpmax}-min#{$bpmin}, .bp-min#{$bpmin}-max#{$bpmax} {
				      display: block !important;
				      @each $display in $displays {
					      $dspl: nth($display, 1);
					      &.bp-#{$dspl} {
						      display: $dspl !important;
					      }
					    }
				    }
				
				  }
			  		
		  	}
		  
		  }
		
		}
	
	}
	
}